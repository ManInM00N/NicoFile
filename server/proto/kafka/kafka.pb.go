// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.12.4
// source: server/proto/kafka/kafka.proto

package kafka

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileMonitor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Warning       bool                   `protobuf:"varint,3,opt,name=warning,proto3" json:"warning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMonitor) Reset() {
	*x = FileMonitor{}
	mi := &file_server_proto_kafka_kafka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMonitor) ProtoMessage() {}

func (x *FileMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_kafka_kafka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMonitor.ProtoReflect.Descriptor instead.
func (*FileMonitor) Descriptor() ([]byte, []int) {
	return file_server_proto_kafka_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *FileMonitor) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileMonitor) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileMonitor) GetWarning() bool {
	if x != nil {
		return x.Warning
	}
	return false
}

type UserMonitor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Warning       bool                   `protobuf:"varint,3,opt,name=warning,proto3" json:"warning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMonitor) Reset() {
	*x = UserMonitor{}
	mi := &file_server_proto_kafka_kafka_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMonitor) ProtoMessage() {}

func (x *UserMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_kafka_kafka_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMonitor.ProtoReflect.Descriptor instead.
func (*UserMonitor) Descriptor() ([]byte, []int) {
	return file_server_proto_kafka_kafka_proto_rawDescGZIP(), []int{1}
}

func (x *UserMonitor) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserMonitor) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserMonitor) GetWarning() bool {
	if x != nil {
		return x.Warning
	}
	return false
}

var File_server_proto_kafka_kafka_proto protoreflect.FileDescriptor

var file_server_proto_kafka_kafka_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b,
	0x61, 0x66, 0x6b, 0x61, 0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x22, 0x5a, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x22, 0x5a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x42,
	0x21, 0x5a, 0x1f, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x3d, 0x2e, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x61, 0x66,
	0x6b, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_kafka_kafka_proto_rawDescOnce sync.Once
	file_server_proto_kafka_kafka_proto_rawDescData = file_server_proto_kafka_kafka_proto_rawDesc
)

func file_server_proto_kafka_kafka_proto_rawDescGZIP() []byte {
	file_server_proto_kafka_kafka_proto_rawDescOnce.Do(func() {
		file_server_proto_kafka_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_kafka_kafka_proto_rawDescData)
	})
	return file_server_proto_kafka_kafka_proto_rawDescData
}

var file_server_proto_kafka_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_server_proto_kafka_kafka_proto_goTypes = []any{
	(*FileMonitor)(nil), // 0: kafka.FileMonitor
	(*UserMonitor)(nil), // 1: kafka.UserMonitor
}
var file_server_proto_kafka_kafka_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_server_proto_kafka_kafka_proto_init() }
func file_server_proto_kafka_kafka_proto_init() {
	if File_server_proto_kafka_kafka_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_kafka_kafka_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_proto_kafka_kafka_proto_goTypes,
		DependencyIndexes: file_server_proto_kafka_kafka_proto_depIdxs,
		MessageInfos:      file_server_proto_kafka_kafka_proto_msgTypes,
	}.Build()
	File_server_proto_kafka_kafka_proto = out.File
	file_server_proto_kafka_kafka_proto_rawDesc = nil
	file_server_proto_kafka_kafka_proto_goTypes = nil
	file_server_proto_kafka_kafka_proto_depIdxs = nil
}
